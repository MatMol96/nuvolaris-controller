# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
name: Build Images
on: 
  push:
    tags:
      - '*'
    branches-ignore: '*'
  workflow_dispatch:
    inputs:
      enable_ngrok_debug:
        description: "Enable Ngrok Debugging"
        required: true
        type: boolean
        default: false
env:
  NGROK_DEBUG: ${{ inputs.enable_ngrok_debug }}
  NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
  NGROK_PASSWORD: ${{ secrets.NGROK_PASSWORD }}
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout recursive
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: License check
        uses: apache/skywalking-eyes@main
      - name: Registry login
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Setup task
        run: bash .github/tools/cisetup.sh
      - name: Setup
        run: bash .github/tools/setup.sh
      - id: build
        name: Build and Push Images
        run: task buildx-and-push
        continue-on-error: true
      - name: Debug Action (if requested)
        run:  bash .github/tools/debugAction.sh
      - name: Wait for Debug (if requested)
        run: bash .github/tools/waitIfDebug.sh
      - name: Results
        run: test "${{ steps.build.outcome }}" ==  "success"
      
      
 